# =============================================================================
# ESC-50 Dataset Configuration (Consolidated)
# =============================================================================
# Pure dataset configuration - model-specific parameters are now in model configs
# Supports both AST and EnvNet-v2 models through model config overrides
# 
# USAGE:
# ======
# Model-specific settings are now defined in:
# - configs/model/ast.yaml (SpecAugment, spectrogram preprocessing)
# - configs/model/envnet_v2.yaml (waveform preprocessing, augmentation)
#
# Training examples:
# python train.py model=ast dataset=esc50
# python train.py model=envnet_v2 dataset=esc50
# =============================================================================

_target_: src.datasets.esc50.ESC50DataModule
root: data/processed/esc50
num_classes: 50
fold: 0                # Range: 0-4 (ESC-50 uses 5-fold CV)
val_split: 0.1         # Range: 0.0-0.5 (fraction of training data for validation)

# =============================================================================
# DATASET-SPECIFIC PARAMETERS
# =============================================================================

# Augmentation settings for dataset-level configuration
# Model configs will override these with their specific requirements
enable_bc_mixing: false  # Boolean: BC mixing (for waveform models)
enable_mixup: false      # Boolean: Mixup (for spectrogram models)
mixup_alpha: 0.5        # Range: 0.1-2.0, typical: 0.5-1.0 (Beta distribution parameter)

# Base preprocessing configuration (overridden by model configs)
preprocessing_mode: auto  # Will be set by model config
sample_rate: 44100       # Standard audio sample rate

# =============================================================================
# DATALOADER CONFIGURATION  
# =============================================================================
batch_size: 32          # Range: 8-128, AST: 16-32, EnvNet-v2: 32-64
num_workers: 4          # Range: 0-8, depends on CPU cores
pin_memory: true        # Boolean: faster GPU transfer
persistent_workers: true # Boolean: faster epoch transitions
